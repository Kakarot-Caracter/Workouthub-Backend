// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int             @id @default(autoincrement())
  username       String
  email          String          @unique
  password       String
  height         Int?
  age            Int?
  weight         Int?
  gender         Gender?
  weeklyActivity WeeklyActivity?
  routines       Routine[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Gender {
  male
  female
}

enum WeeklyActivity {
  LIGHT // 1–3 times a week
  MODERATE // 3–5 times a week
  INTENSE // 6–7 times a week
}

// Nuevo modelo: Routine (pertenece a un User, tiene muchos Exercise)
model Routine {
  id          Int        @id @default(autoincrement())
  name        String
  description String?
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  exercises   Exercise[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

// Nuevo modelo: Exercise (pertenece a una Routine)
model Exercise {
  id   Int    @id @default(autoincrement())
  name String

  sets      Int?
  reps      Int?
  weight    Int?
  order     Int? // para ordenar ejercicios dentro de la rutina
  routine   Routine  @relation(fields: [routineId], references: [id], onDelete: Cascade)
  routineId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
